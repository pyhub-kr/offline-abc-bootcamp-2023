# -*- coding: utf-8 -*-
"""[과제]데이터 수집_멜론 TOP100크롤링_박다솜.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CZqMhGDaNMESouWDKyx4our0-LNEyrSI

멜론 TOP100 크롤링


*   주소: https://www.melon.com/chart/index.htm
*   멜론 TOP100을 크롤링하여, 곡의 (곡일련번호, 순위, 앨범, 곡명, 가수, 커버이미지_주소, 좋아요)를 데이터프레임으로 정렬하여 출력하기

#라이브러리 임포트
"""

import requests
from bs4 import BeautifulSoup as bs
import json
import pandas as pd

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36",
}

json_url = "https://www.melon.com/chart/index.htm"

res = requests.get(json_url, headers=headers)
res

res.content

html = requests.get(json_url, headers=headers).text
soup = bs(html, 'html.parser')
len(html)

tag_list = soup.select('span.rank')
len(tag_list)

"""#한곡에 대하여 확인하기"""

song_list = soup.select('tbody>tr')
test_song = song_list[0]

# 곡 일련번호
song_num = test_song['data-song-no']
# 곡 순위
song_rank = test_song.select_one('span.rank').string
# 앨범명
album_name = test_song.select_one('.service_list_song .ellipsis.rank03 a').string
# 곡명
song_name = test_song.select_one('.service_list_song .ellipsis.rank01 a').string
# 가수
artist = test_song.select_one('.service_list_song .ellipsis.rank02 a').string
# 커버이미지 주소
co_img_url = test_song.select_one('a img')['src']

song_num, song_rank, album_name, song_name, artist, co_img_url

#좋아요
like_url = f'https://www.melon.com/commonlike/getSongLike.json?contsIds={song_num}'
like_html = requests.get(like_url, headers=headers).text

"""#TOP100적용을 위한 함수 생성"""

def melon_top100(song):
  # 곡 일련번호
  song_num = song['data-song-no']
  # 곡 순위
  song_rank = song.select_one('span.rank').string
  # 앨범명
  album_name = song.select_one('.service_list_song .ellipsis.rank03 a').string
  # 곡명
  song_name = song.select_one('.service_list_song .ellipsis.rank01 a').string
  # 가수
  artist = song.select_one('.service_list_song .ellipsis.rank02 a').string
  # 커버이미지 주소
  co_img_url = song.select_one('a img')['src']
  # 좋아요
  like_url = f'https://www.melon.com/commonlike/getSongLike.json?contsIds={song_num}'
  like_html = requests.get(like_url, headers=headers).text

  top100_song = {
      '곡일련번호': [song_num],
      '순위' : [song_rank],
      '앨범' : [album_name],
      '곡명' : [song_name],
      '가수' : [artist],
      '커버이미지_주소' : [co_img_url],

  }
  top100_song_df = pd.DataFrame(top100_song)

  return top100_song_df

def top100_chart():
  # 함수 실행
  song_list = soup.select('tbody>tr')
  top100_chartlist = pd.DataFrame(columns = {
      '곡일련번호' : [],
      '순위' : [],
      '앨범' : [],
      '곡명': [],
      '가수' : [],
      '커버이미지_주소' : [],
      '좋아요' : []
      })

  for song in song_list:
    top100_chartlist = pd.concat([top100_chartlist, melon_top100(song)], ignore_index = True)

  return top100_chartlist

top100_chartlist = top100_chart()

top100_chartlist.head()

